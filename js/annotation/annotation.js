///////////////// 1. Data structures & algorithms
// 1.1 - knows basic structures like Array, Linked list, Dictionary;
// 1.2 - O notation;
// 1.3 - basic search and sorting algorithms (at least 2 for search and 2 for sorting);
   
   /// 1.1 Массивы. Упорядоченый массив данных,счет идет по индексу
   /// Стек . Последний пришел первый ушел
   /// Очередь. Первый пришел первый ушел

   /// 1.2 O notation
   /// Описание сложности выполнения алгоритма

   /* 1.3 basic search and sorting algorithms
         Алгоритмы сортировки: 
            1 Bubble sort - Сравнивает два соседних значения и если второе значение меньше то меняет 
               местами(всплывает словно пузырёк) сложность -- O(N^2)
            2 Сортировка выбором - ищет минамальное значени и ставит на 1ю позицию потом ищет следующее
               мигимальное значение и ставит на 2ю позицию сложность -- O(N^2)
            3 Быстрая сортировка - по середина массива выбираеться опорное значение и все значения 
               сравниваются с опорным, все что меньше опорного уходит в левую часть все что больше в 
               в првую и повторяеться тоже самое с двумя новыми массивами ( использует подход "Разделяй и всластвуй")
            4 Cортировка слиянием - масив делится по середине потом следующие два так же деляться по середине и так 
               далее пока масив не будет содержать одно значение потом сливает все эти маленькие массивы в один отсортированый массив
   */

   /* Алгоритмы поиска
         1. Линейный - Сравнивает искомый элемент с каждым элементом массива попорядку O(N)
         2. Бинарный - Работает только в отсортированом массиве.
               В середина массива берет число и сравнивает с искомым и если оно меньше то работаем только 
               с левой частью и повторяем  О(logN(2))
      /*
   ///////////////// 2. Design Patterns
      /* 
      Паттерн модуль: 
         Состовная часть любого приложения, помогает содержать код в чистоте, разделение на осмысленые участки кода
         и помогать его организовывать. Возмодность повторного использования в других приложениях. 
         
      Патерн Singleton: Экземпляр для класса создается в том случае если такого еще нет. Есле экземпляр существует то 
      возвращается ссылка на этот обьект

      Патерн Фабрика

      Патерн Декоратор
      */